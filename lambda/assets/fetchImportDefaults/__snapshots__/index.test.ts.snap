// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fetchImportsMessage should follow dynamic renames in imports 1`] = `
Object {
  "importsByAsset": Array [
    Object {
      "assetId": "ASSET#testFinal",
      "wml": "<Asset key=(testFinal)>
    <Room key=(testImportTwo)><Name>StubFoo</Name></Room>
    <Room key=(testNonImportTwo)>
        <Exit to=(testImportTwo)>test exit</Exit>
    </Room>
</Asset>",
    },
  ],
  "messageType": "FetchImports",
}
`;

exports[`fetchImportsMessage should import multilevel and avoid colliding stub names 1`] = `
Object {
  "importsByAsset": Array [
    Object {
      "assetId": "ASSET#testFinal",
      "wml": "<Asset key=(testFinal)>
    <Room key=(testImportAssetThree.stub)><Name>AssetThreeStub</Name></Room>
    <Room key=(testImportAssetTwo.stub)><Name>Asset Three</Name></Room>
    <Room key=(testImportThree)>
        <Description>Asset Two</Description>
        <Exit to=(testImportAssetThree.stub)>test exit</Exit>
        <Exit to=(testImportAssetTwo.stub)>test exit</Exit>
    </Room>
</Asset>",
    },
  ],
  "messageType": "FetchImports",
}
`;

exports[`fetchImportsMessage should recursive fetch one level of element and stubs when passed import key 1`] = `
Object {
  "importsByAsset": Array [
    Object {
      "assetId": "ASSET#testFinal",
      "wml": "<Asset key=(testFinal)>
    <Room key=(testImportOne)>
        <Description>OneTwo</Description>
        <Exit to=(testImportStubOne)>test exit one</Exit>
    </Room>
    <Room key=(testImportStubOne)><Name>StubTwo</Name></Room>
</Asset>",
    },
  ],
  "messageType": "FetchImports",
}
`;

exports[`fetchImportsMessage should return element and stubs when passed non-import key 1`] = `
Object {
  "importsByAsset": Array [
    Object {
      "assetId": "ASSET#testFinal",
      "wml": "<Asset key=(testFinal)>
    <Room key=(testNonImport)>
        <Description>DescriptionOne</Description>
        <Exit to=(testNonImportStub)>test exit</Exit>
    </Room>
    <Room key=(testNonImportStub)><Name>StubOne</Name></Room>
</Asset>",
    },
  ],
  "messageType": "FetchImports",
}
`;

exports[`fetchImportsMessage should return empty when passed no keys 1`] = `
Object {
  "importsByAsset": Array [
    Object {
      "assetId": "ASSET#testFinal",
      "wml": "<Asset key=(testFinal) />",
    },
  ],
  "messageType": "FetchImports",
}
`;
