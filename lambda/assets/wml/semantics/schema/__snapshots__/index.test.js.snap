// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WML semantic schema should derive spaceBefore and spaceAfter properties from whitespace in description 1`] = `
Object {
  "Story": true,
  "contents": Array [
    Object {
      "contents": Array [],
      "display": undefined,
      "global": false,
      "key": "stone",
      "props": Object {},
      "render": Array [],
      "tag": "Feature",
    },
    Object {
      "contents": Array [],
      "display": undefined,
      "global": false,
      "key": "clockTower",
      "props": Object {},
      "render": Array [
        Object {
          "spaceAfter": false,
          "spaceBefore": false,
          "tag": "String",
          "value": "A clock-tower of weathered grey-",
        },
        Object {
          "contents": Array [],
          "key": "towerStone",
          "props": Object {},
          "spaceAfter": true,
          "spaceBefore": false,
          "tag": "Link",
          "text": "stone",
          "to": "stone",
        },
        Object {
          "spaceAfter": false,
          "spaceBefore": true,
          "tag": "String",
          "value": "looms over the area.",
        },
      ],
      "tag": "Feature",
    },
    Object {
      "contents": Array [
        Object {
          "contents": Array [],
          "display": undefined,
          "global": false,
          "key": "clockTower",
          "props": Object {},
          "render": Array [],
          "tag": "Feature",
        },
      ],
      "display": undefined,
      "global": false,
      "key": "ABC",
      "props": Object {},
      "render": Array [
        Object {
          "spaceAfter": true,
          "spaceBefore": false,
          "tag": "String",
          "value": "A spinning tumble of wreckage, surrounding a",
        },
        Object {
          "contents": Array [],
          "key": "vortexClockTower",
          "props": Object {},
          "spaceAfter": false,
          "spaceBefore": true,
          "tag": "Link",
          "text": "clock tower",
          "to": "clockTower",
        },
        Object {
          "spaceAfter": false,
          "spaceBefore": false,
          "tag": "String",
          "value": ".",
        },
      ],
      "tag": "Room",
    },
  ],
  "description": undefined,
  "fileName": "test",
  "instance": true,
  "key": "Test",
  "player": undefined,
  "props": Object {},
  "tag": "Asset",
  "zone": undefined,
}
`;

exports[`WML semantic schema should parse a character element 1`] = `
Object {
  "Name": "Tess",
  "Pronouns": Object {
    "adjective": "hers",
    "object": "her",
    "possessive": "her",
    "reflexive": "herself",
    "subject": "she",
  },
  "contents": Array [],
  "fileName": "Tess",
  "fileURL": "testIcon.png",
  "key": "Tess",
  "player": "testy",
  "props": Object {},
  "tag": "Character",
  "zone": "Library",
}
`;

exports[`WML semantic schema should parse a story element 1`] = `
Object {
  "Story": true,
  "contents": Array [
    Object {
      "contents": Array [],
      "display": undefined,
      "global": false,
      "key": "ABC",
      "name": "Vortex",
      "props": Object {},
      "render": Array [
        Object {
          "spaceAfter": false,
          "spaceBefore": false,
          "tag": "String",
          "value": "Vortex",
        },
      ],
      "tag": "Room",
    },
  ],
  "description": undefined,
  "fileName": "test",
  "instance": true,
  "key": "Test",
  "player": undefined,
  "props": Object {},
  "tag": "Asset",
  "zone": undefined,
}
`;

exports[`WML semantic schema should parse elements properly 1`] = `
Object {
  "contents": Array [
    Object {
      "contents": Array [],
      "from": "BASE",
      "mapping": Object {
        "overview": Object {
          "key": "overview",
          "type": "Room",
        },
        "power": Object {
          "key": "basePower",
          "type": "Variable",
        },
      },
      "props": Object {},
      "tag": "Import",
    },
    Object {
      "contents": Array [
        Object {
          "contents": Array [],
          "from": "DEF",
          "key": undefined,
          "name": "vortex",
          "props": Object {},
          "tag": "Exit",
          "to": undefined,
        },
      ],
      "display": undefined,
      "global": false,
      "key": "ABC",
      "name": "Vortex",
      "props": Object {},
      "render": Array [
        Object {
          "spaceAfter": true,
          "spaceBefore": false,
          "tag": "String",
          "value": "Vortex",
        },
        Object {
          "contents": Array [],
          "key": "switchToggle",
          "props": Object {},
          "spaceAfter": false,
          "spaceBefore": true,
          "tag": "Link",
          "text": "(toggle)",
          "to": "toggleOpen",
        },
      ],
      "tag": "Room",
    },
    Object {
      "contents": Array [
        Object {
          "contents": Array [
            Object {
              "contents": Array [],
              "from": undefined,
              "key": undefined,
              "name": "welcome",
              "props": Object {},
              "tag": "Exit",
              "to": "DEF",
            },
          ],
          "display": undefined,
          "global": false,
          "key": "ABC",
          "props": Object {},
          "render": Array [],
          "tag": "Room",
        },
      ],
      "dependencies": Array [
        "open",
      ],
      "if": "open",
      "props": Object {},
      "tag": "Condition",
    },
    Object {
      "contents": Array [],
      "display": undefined,
      "global": false,
      "key": "DEF",
      "name": "Welcome",
      "props": Object {},
      "render": Array [],
      "tag": "Room",
    },
    Object {
      "default": "false",
      "key": "open",
      "props": Object {},
      "tag": "Variable",
    },
    Object {
      "key": "toggleOpen",
      "props": Object {},
      "src": "open = !open",
      "tag": "Action",
    },
    Object {
      "dependencies": Array [
        "open",
      ],
      "key": "closed",
      "props": Object {},
      "src": "!open",
      "tag": "Computed",
    },
  ],
  "description": undefined,
  "fileName": "test",
  "key": "Test",
  "player": undefined,
  "props": Object {},
  "tag": "Asset",
  "zone": undefined,
}
`;

exports[`WML semantic schema should parse feature elements 1`] = `
Object {
  "Story": true,
  "contents": Array [
    Object {
      "contents": Array [],
      "display": undefined,
      "global": false,
      "key": "clockTower",
      "props": Object {},
      "render": Array [
        Object {
          "spaceAfter": false,
          "spaceBefore": false,
          "tag": "String",
          "value": "A clock-tower of weathered grey stone looms over the area.",
        },
      ],
      "tag": "Feature",
    },
    Object {
      "contents": Array [
        Object {
          "contents": Array [],
          "display": undefined,
          "global": false,
          "key": "clockTower",
          "props": Object {},
          "render": Array [],
          "tag": "Feature",
        },
      ],
      "display": undefined,
      "global": false,
      "key": "ABC",
      "name": "Vortex",
      "props": Object {},
      "render": Array [
        Object {
          "spaceAfter": false,
          "spaceBefore": false,
          "tag": "String",
          "value": "Vortex",
        },
      ],
      "tag": "Room",
    },
  ],
  "description": undefined,
  "fileName": "test",
  "instance": true,
  "key": "Test",
  "player": undefined,
  "props": Object {},
  "tag": "Asset",
  "zone": undefined,
}
`;

exports[`WML semantic schema should parse map elements 1`] = `
Object {
  "Story": true,
  "contents": Array [
    Object {
      "contents": Array [
        Object {
          "contents": Array [],
          "fileURL": "https://test.com/imageTest.png",
          "key": "ImageTest",
          "props": Object {},
          "tag": "Image",
        },
        Object {
          "contents": Array [],
          "display": undefined,
          "global": false,
          "key": "ABC",
          "props": Object {},
          "render": Array [],
          "tag": "Room",
        },
      ],
      "key": "TestMap",
      "name": "Test Map",
      "props": Object {},
      "rooms": Object {
        "ABC": Object {
          "x": 200,
          "y": 150,
        },
      },
      "tag": "Map",
    },
  ],
  "description": undefined,
  "fileName": "test",
  "instance": true,
  "key": "Test",
  "player": undefined,
  "props": Object {},
  "tag": "Asset",
  "zone": undefined,
}
`;
