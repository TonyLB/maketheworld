// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`wmlQuery add method should correctly add filter tag matches 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "end": 130,
        "start": 126,
        "type": "string",
        "value": "test",
      },
    ],
    "end": 137,
    "props": Object {
      "to": Object {
        "end": 125,
        "start": 116,
        "value": "Test",
        "valueEnd": 124,
        "valueStart": 120,
      },
    },
    "start": 110,
    "tag": "Exit",
    "tagEnd": 115,
    "type": "tag",
  },
]
`;

exports[`wmlQuery add method should correctly add first filters 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "end": 110,
        "start": 83,
        "type": "string",
        "value": "First Room
                ",
      },
      Object {
        "contents": Array [
          Object {
            "end": 130,
            "start": 126,
            "type": "string",
            "value": "test",
          },
        ],
        "end": 137,
        "props": Object {
          "to": Object {
            "end": 125,
            "start": 116,
            "value": "Test",
            "valueEnd": 124,
            "valueStart": 120,
          },
        },
        "start": 110,
        "tag": "Exit",
        "tagEnd": 115,
        "type": "tag",
      },
    ],
    "end": 157,
    "props": Object {
      "global": Object {
        "end": 65,
        "start": 59,
        "value": true,
      },
      "key": Object {
        "end": 58,
        "start": 46,
        "value": "VORTEX",
        "valueEnd": 57,
        "valueStart": 51,
      },
    },
    "start": 40,
    "tag": "Room",
    "tagEnd": 45,
    "type": "tag",
  },
]
`;

exports[`wmlQuery add method should correctly add property filters 1`] = `
Array [
  Object {
    "contents": Array [],
    "end": 189,
    "props": Object {
      "key": Object {
        "end": 186,
        "start": 176,
        "value": "test",
        "valueEnd": 185,
        "valueStart": 181,
      },
    },
    "start": 170,
    "tag": "Room",
    "tagEnd": 175,
    "type": "tag",
  },
]
`;

exports[`wmlQuery children method should correctly aggregate child nodes 1`] = `
Array [
  Object {
    "end": 112,
    "start": 83,
    "type": "string",
    "value": "Test Render:
                ",
  },
  Object {
    "contents": Array [
      Object {
        "end": 155,
        "start": 144,
        "type": "string",
        "value": "Clock Tower",
      },
    ],
    "end": 162,
    "props": Object {
      "key": Object {
        "end": 127,
        "start": 118,
        "value": "123",
        "valueEnd": 126,
        "valueStart": 123,
      },
      "to": Object {
        "end": 143,
        "start": 128,
        "value": "clockTower",
        "valueEnd": 142,
        "valueStart": 132,
      },
    },
    "start": 112,
    "tag": "Link",
    "tagEnd": 117,
    "type": "tag",
  },
  Object {
    "contents": Array [
      Object {
        "end": 199,
        "start": 195,
        "type": "string",
        "value": "test",
      },
    ],
    "end": 206,
    "props": Object {
      "to": Object {
        "end": 194,
        "start": 185,
        "value": "Test",
        "valueEnd": 193,
        "valueStart": 189,
      },
    },
    "start": 179,
    "tag": "Exit",
    "tagEnd": 184,
    "type": "tag",
  },
  Object {
    "end": 349,
    "start": 314,
    "type": "string",
    "value": "Conditional Render
                ",
  },
]
`;

exports[`wmlQuery not method should correctly remove nodes from result-set 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "end": 112,
        "start": 83,
        "type": "string",
        "value": "Test Render:
                ",
      },
      Object {
        "contents": Array [
          Object {
            "end": 155,
            "start": 144,
            "type": "string",
            "value": "Clock Tower",
          },
        ],
        "end": 162,
        "props": Object {
          "key": Object {
            "end": 127,
            "start": 118,
            "value": "123",
            "valueEnd": 126,
            "valueStart": 123,
          },
          "to": Object {
            "end": 143,
            "start": 128,
            "value": "clockTower",
            "valueEnd": 142,
            "valueStart": 132,
          },
        },
        "start": 112,
        "tag": "Link",
        "tagEnd": 117,
        "type": "tag",
      },
      Object {
        "contents": Array [
          Object {
            "end": 199,
            "start": 195,
            "type": "string",
            "value": "test",
          },
        ],
        "end": 206,
        "props": Object {
          "to": Object {
            "end": 194,
            "start": 185,
            "value": "Test",
            "valueEnd": 193,
            "valueStart": 189,
          },
        },
        "start": 179,
        "tag": "Exit",
        "tagEnd": 184,
        "type": "tag",
      },
    ],
    "end": 226,
    "props": Object {
      "global": Object {
        "end": 65,
        "start": 59,
        "value": true,
      },
      "key": Object {
        "end": 58,
        "start": 46,
        "value": "VORTEX",
        "valueEnd": 57,
        "valueStart": 51,
      },
    },
    "start": 40,
    "tag": "Room",
    "tagEnd": 45,
    "type": "tag",
  },
]
`;

exports[`wmlQuery prepend method should correctly aggregate child nodes 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                <Name>Vortex</Name>Test Render:
                <Link key=(123) to=(clockTower)>Clock Tower</Link>
                <Exit to=(Test)>test</Exit>
            </Room>
            <Condition>
                <Room key=(VORTEX) global>
                    Conditional Render
                </Room>
            </Condition>
        </Asset>
    "
`;

exports[`wmlQuery remove method should correctly remove nodes from source 1`] = `
"
        <Asset key=(BASE)>
            
            <Condition>
                
            </Condition>
            <Room key=(Test) />
            <Room key=(multipleTest)>
                Render One
            </Room>
            <Room key=(multipleTest)>
                Render Two
            </Room>
            <Feature key=(clockTower)>
                Clocktower
                test
                on multiple lines
            </Feature>
        </Asset>
    "
`;

exports[`wmlQuery render method should (temporarily) ignore render updates on self-closed tags 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                Test Render:
                <Link key=(123) to=(clockTower)>Clock Tower</Link>
                <Exit to=(Test)>test</Exit>
            </Room>
            <Room key=(Test) />
            <Room key=(multipleTest)>
                Render One
            </Room>
            <Room key=(multipleTest)>
                Render Two
            </Room>
            <Feature key=(clockTower)>
                Clocktower
                test
                on multiple lines
            </Feature>
        </Asset>
    "
`;

exports[`wmlQuery render method should correctly extract renders 1`] = `
Array [
  "Test Render:
                ",
  Object {
    "key": "123",
    "tag": "Link",
    "targetTag": "Feature",
    "text": "Clock Tower",
    "to": "clockTower",
  },
]
`;

exports[`wmlQuery render method should correctly update multiple renders in a set 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                Test Render:
                <Link key=(123) to=(clockTower)>Clock Tower</Link>
                <Exit to=(Test)>test</Exit>
            </Room>
            <Room key=(Test) />
            <Room key=(multipleTest)>
                Much, much, longer render
                Like, seriously, it's insane how much longer this render is
            </Room>
            <Room key=(multipleTest)>
                Much, much, longer render
                Like, seriously, it's insane how much longer this render is
            </Room>
            <Feature key=(clockTower)>
                Clocktower
                test
                on multiple lines
            </Feature>
        </Asset>
    "
`;

exports[`wmlQuery render method should correctly update renders 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                Test Render Two: 
<Link key=(456) to=(clockTower)>(clock tower)</Link>
<Exit to=(Test)>test</Exit>
            </Room>
            <Room key=(Test) />
            <Room key=(multipleTest)>
                Render One
            </Room>
            <Room key=(multipleTest)>
                Render Two
            </Room>
            <Feature key=(clockTower)>
                Clocktower
                test
                on multiple lines
            </Feature>
        </Asset>
    "
`;
