// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WML normalize delete method should cascade deletes when removing an appearance with contents 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testVar",
            "tag": "Variable",
          },
          Object {
            "index": 0,
            "key": "testOne",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "testTwo",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "testOne": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "One",
          },
        ],
      },
    ],
    "global": false,
    "key": "testOne",
    "tag": "Room",
  },
  "testTwo": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "testTwo",
    "tag": "Room",
  },
  "testVar": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "testVar",
    "tag": "Variable",
  },
}
`;

exports[`WML normalize delete method should delete empty parent conditions 1`] = `
Object {
  "TestAsset": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testVar",
            "tag": "Variable",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "TestAsset",
    "tag": "Asset",
    "zone": undefined,
  },
  "testVar": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "testVar",
    "tag": "Variable",
  },
}
`;

exports[`WML normalize delete method should remove a single appearance 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "test",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "test": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "One",
          },
        ],
      },
    ],
    "global": false,
    "key": "test",
    "tag": "Room",
  },
}
`;

exports[`WML normalize delete method should remove the entire element on removing last appearance 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
}
`;

exports[`WML normalize delete method should rename synthetic keys to fill in gaps for deleted conditionals 1`] = `
Object {
  "If-0": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testOne",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "conditions": Array [
      Object {
        "dependencies": Array [
          "testVarOne",
        ],
        "if": "testVarOne",
      },
    ],
    "key": "If-0",
    "tag": "If",
  },
  "If-1": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 1,
            "key": "testOne",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "conditions": Array [
      Object {
        "dependencies": Array [
          "testVarThree",
        ],
        "if": "testVarThree",
      },
    ],
    "key": "If-1",
    "tag": "If",
  },
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testVarOne",
            "tag": "Variable",
          },
          Object {
            "index": 0,
            "key": "testVarTwo",
            "tag": "Variable",
          },
          Object {
            "index": 0,
            "key": "testVarThree",
            "tag": "Variable",
          },
          Object {
            "index": 0,
            "key": "If-0",
            "tag": "If",
          },
          Object {
            "index": 0,
            "key": "If-1",
            "tag": "If",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "testOne": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "If-0",
            "tag": "If",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "One",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "If-1",
            "tag": "If",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Three",
          },
        ],
      },
    ],
    "global": false,
    "key": "testOne",
    "tag": "Room",
  },
  "testVarOne": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "testVarOne",
    "tag": "Variable",
  },
  "testVarThree": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "testVarThree",
    "tag": "Variable",
  },
  "testVarTwo": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "testVarTwo",
    "tag": "Variable",
  },
}
`;

exports[`WML normalize positioned put method should add an item between two others 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 1,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 2,
            "key": "test",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "test": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "One",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Two",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Three",
          },
        ],
      },
    ],
    "global": false,
    "key": "test",
    "tag": "Room",
  },
}
`;

exports[`WML normalize positioned put method should correctly reorder when added item is nested 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "testMap",
            "tag": "Map",
          },
          Object {
            "index": 2,
            "key": "test",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "test": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "One",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testMap",
            "tag": "Map",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Two",
          },
        ],
        "x": 0,
        "y": 0,
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Three",
          },
        ],
      },
    ],
    "global": false,
    "key": "test",
    "tag": "Room",
  },
  "testMap": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 1,
            "key": "test",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "images": Array [],
        "rooms": Array [
          Object {
            "conditions": Array [],
            "key": "test",
            "x": 0,
            "y": 0,
          },
        ],
      },
    ],
    "key": "testMap",
    "tag": "Map",
  },
}
`;

exports[`WML normalize positioned put method should recalculate Map rooms property on contents update 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testMap",
            "tag": "Map",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "test": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testMap",
            "tag": "Map",
          },
        ],
        "name": Array [],
        "render": Array [],
        "x": 0,
        "y": 0,
      },
    ],
    "global": false,
    "key": "test",
    "tag": "Room",
  },
  "testMap": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "testTwo",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "images": Array [],
        "rooms": Array [
          Object {
            "conditions": Array [],
            "key": "test",
            "x": 0,
            "y": 0,
          },
          Object {
            "conditions": Array [],
            "key": "testTwo",
            "x": 0,
            "y": 100,
          },
        ],
      },
    ],
    "key": "testMap",
    "tag": "Map",
  },
  "testTwo": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testMap",
            "tag": "Map",
          },
        ],
        "name": Array [],
        "render": Array [],
        "x": 0,
        "y": 100,
      },
    ],
    "global": false,
    "key": "testTwo",
    "tag": "Room",
  },
}
`;

exports[`WML normalize positioned put method should replace a nest that includes an item with the item itself 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 1,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 2,
            "key": "test",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "test": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "One",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Two",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Three",
          },
        ],
      },
    ],
    "global": false,
    "key": "test",
    "tag": "Room",
  },
}
`;

exports[`WML normalize positioned put method should replace a top level character item 1`] = `
Object {
  "Tess": Object {
    "FirstImpression": "Frumpy goth",
    "Name": "Tessa",
    "OneCoolThing": "Thousand yard stare",
    "Outfit": "A battered frock-coat",
    "Pronouns": Object {
      "adjective": "hers",
      "object": "her",
      "possessive": "her",
      "reflexive": "herself",
      "subject": "she",
    },
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [],
      },
    ],
    "fileName": "test",
    "images": Array [],
    "key": "Tess",
    "tag": "Character",
  },
}
`;

exports[`WML normalize positioned put method should replace an item with a different item 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "testTwo",
            "tag": "Room",
          },
          Object {
            "index": 1,
            "key": "test",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "test": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "One",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Two",
          },
        ],
      },
    ],
    "global": false,
    "key": "test",
    "tag": "Room",
  },
  "testTwo": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Bar",
          },
        ],
      },
    ],
    "global": false,
    "key": "testTwo",
    "tag": "Room",
  },
}
`;

exports[`WML normalize positioned put method should replace an item with a nest that includes the item 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "testMap",
            "tag": "Map",
          },
          Object {
            "index": 2,
            "key": "test",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "test": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "One",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testMap",
            "tag": "Map",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Two",
          },
        ],
        "x": 0,
        "y": 0,
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Three",
          },
        ],
      },
    ],
    "global": false,
    "key": "test",
    "tag": "Room",
  },
  "testMap": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 1,
            "key": "test",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "images": Array [],
        "rooms": Array [
          Object {
            "conditions": Array [],
            "key": "test",
            "x": 0,
            "y": 0,
          },
        ],
      },
    ],
    "key": "testMap",
    "tag": "Map",
  },
}
`;

exports[`WML normalize positioned put method should replace nested internal conditions 1`] = `
Object {
  "If-0": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testTwo",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testMap",
            "tag": "Map",
          },
        ],
      },
      Object {
        "contents": Array [
          Object {
            "index": 1,
            "key": "testMap",
            "tag": "Map",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "conditions": Array [
      Object {
        "dependencies": Array [],
        "if": "true",
      },
    ],
    "key": "If-0",
    "tag": "If",
  },
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testMap",
            "tag": "Map",
          },
          Object {
            "index": 1,
            "key": "If-0",
            "tag": "If",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "test": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testMap",
            "tag": "Map",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "One",
          },
        ],
        "x": 0,
        "y": 100,
      },
    ],
    "global": false,
    "key": "test",
    "tag": "Room",
  },
  "testMap": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "If-0",
            "tag": "If",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "images": Array [],
        "rooms": Array [
          Object {
            "conditions": Array [],
            "key": "test",
            "x": 0,
            "y": 100,
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [],
                "if": "true",
              },
            ],
            "key": "testTwo",
            "x": 100,
            "y": 0,
          },
        ],
      },
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testThree",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 1,
            "key": "If-0",
            "tag": "If",
          },
        ],
        "images": Array [],
        "rooms": Array [
          Object {
            "conditions": Array [],
            "key": "testThree",
            "x": -100,
            "y": 0,
          },
        ],
      },
    ],
    "key": "testMap",
    "tag": "Map",
  },
  "testThree": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 1,
            "key": "If-0",
            "tag": "If",
          },
          Object {
            "index": 1,
            "key": "testMap",
            "tag": "Map",
          },
        ],
        "name": Array [],
        "render": Array [],
        "x": -100,
        "y": 0,
      },
    ],
    "global": false,
    "key": "testThree",
    "tag": "Room",
  },
  "testTwo": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testMap",
            "tag": "Map",
          },
          Object {
            "index": 0,
            "key": "If-0",
            "tag": "If",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Two",
          },
        ],
        "x": 100,
        "y": 0,
      },
    ],
    "global": false,
    "key": "testTwo",
    "tag": "Room",
  },
}
`;

exports[`WML normalize positioned put method should successfully put a duplicate item 1`] = `
Object {
  "If-1": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
        ],
      },
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testRoom#targetTwo",
            "tag": "Exit",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
        ],
      },
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testRoom#targetThree",
            "tag": "Exit",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
        ],
      },
    ],
    "conditions": Array [
      Object {
        "dependencies": Array [
          "testVar",
        ],
        "if": "testVar",
      },
    ],
    "key": "If-1",
    "tag": "If",
  },
  "TestAsset": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testVar",
            "tag": "Variable",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "targetOne",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "targetTwo",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "targetThree",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "TestAsset",
    "tag": "Asset",
    "zone": undefined,
  },
  "targetOne": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "targetOne",
    "tag": "Room",
  },
  "targetThree": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "targetThree",
    "tag": "Room",
  },
  "targetTwo": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "targetTwo",
    "tag": "Room",
  },
  "testRoom": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "If-1",
            "tag": "If",
          },
          Object {
            "index": 1,
            "key": "If-1",
            "tag": "If",
          },
          Object {
            "index": 2,
            "key": "If-1",
            "tag": "If",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "testRoom",
    "tag": "Room",
  },
  "testRoom#targetThree": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
          Object {
            "index": 2,
            "key": "If-1",
            "tag": "If",
          },
        ],
      },
    ],
    "from": "testRoom",
    "key": "testRoom#targetThree",
    "name": "three",
    "tag": "Exit",
    "to": "targetThree",
  },
  "testRoom#targetTwo": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
          Object {
            "index": 1,
            "key": "If-1",
            "tag": "If",
          },
        ],
      },
    ],
    "from": "testRoom",
    "key": "testRoom#targetTwo",
    "name": "two",
    "tag": "Exit",
    "to": "targetTwo",
  },
  "testVar": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "testVar",
    "tag": "Variable",
  },
}
`;

exports[`WML normalize positioned put method should successfully replace a parent with duplicate contents 1`] = `
Object {
  "If-0": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
        ],
      },
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testRoom#targetTwo",
            "tag": "Exit",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
        ],
      },
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testRoom#targetThree",
            "tag": "Exit",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
        ],
      },
    ],
    "conditions": Array [
      Object {
        "dependencies": Array [
          "testVar",
        ],
        "if": "testVar",
      },
    ],
    "key": "If-0",
    "tag": "If",
  },
  "TestAsset": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "testVar",
            "tag": "Variable",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "targetOne",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "targetTwo",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "targetThree",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "TestAsset",
    "tag": "Asset",
    "zone": undefined,
  },
  "targetOne": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "targetOne",
    "tag": "Room",
  },
  "targetThree": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "targetThree",
    "tag": "Room",
  },
  "targetTwo": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "targetTwo",
    "tag": "Room",
  },
  "testRoom": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "If-0",
            "tag": "If",
          },
          Object {
            "index": 1,
            "key": "If-0",
            "tag": "If",
          },
          Object {
            "index": 2,
            "key": "If-0",
            "tag": "If",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "testRoom",
    "tag": "Room",
  },
  "testRoom#targetThree": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
          Object {
            "index": 2,
            "key": "If-0",
            "tag": "If",
          },
        ],
      },
    ],
    "from": "testRoom",
    "key": "testRoom#targetThree",
    "name": "three",
    "tag": "Exit",
    "to": "targetThree",
  },
  "testRoom#targetTwo": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "testRoom",
            "tag": "Room",
          },
          Object {
            "index": 1,
            "key": "If-0",
            "tag": "If",
          },
        ],
      },
    ],
    "from": "testRoom",
    "key": "testRoom#targetTwo",
    "name": "two",
    "tag": "Exit",
    "to": "targetTwo",
  },
  "testVar": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "testVar",
    "tag": "Variable",
  },
}
`;

exports[`WML normalize positioned put method should update an item in place 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 1,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 2,
            "key": "test",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "test": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Uno",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Dos",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Tres",
          },
        ],
      },
    ],
    "global": false,
    "key": "test",
    "tag": "Room",
  },
}
`;

exports[`WML normalize put method should add an item in contents 1`] = `
Object {
  "TestAsset": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 1,
            "key": "test",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "TestAsset",
    "tag": "Asset",
    "zone": undefined,
  },
  "test": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "One",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "TestAsset",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Two",
          },
        ],
      },
    ],
    "global": false,
    "key": "test",
    "tag": "Room",
  },
}
`;

exports[`WML normalize should accumulate multiple appearances of the same key 1`] = `
Object {
  "If-0": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 2,
            "key": "a123",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "conditions": Array [
      Object {
        "dependencies": Array [],
        "if": "true",
      },
    ],
    "key": "If-0",
    "tag": "If",
  },
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "a123",
            "tag": "Room",
          },
          Object {
            "index": 1,
            "key": "a123",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "If-0",
            "tag": "If",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "a123": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [
          Object {
            "tag": "String",
            "value": "Vortex",
          },
        ],
        "render": Array [],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Hello, world!",
          },
          Object {
            "tag": "Space",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "If-0",
            "tag": "If",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Vortex!",
          },
        ],
      },
    ],
    "global": false,
    "key": "a123",
    "tag": "Room",
  },
}
`;

exports[`WML normalize should correctly handle conditionals in message text 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "a123",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "strong",
            "tag": "Variable",
          },
          Object {
            "index": 0,
            "key": "trendy",
            "tag": "Variable",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "a123": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [
          Object {
            "tag": "String",
            "value": "Vortex",
          },
        ],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Hello, world!",
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [
                  "strong",
                ],
                "if": "strong",
              },
            ],
            "contents": Array [
              Object {
                "tag": "String",
                "value": "Vortex!",
              },
            ],
            "tag": "Condition",
          },
          Object {
            "tag": "String",
            "value": " ",
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [
                  "strong",
                ],
                "if": "!strong",
              },
            ],
            "contents": Array [
              Object {
                "conditions": Array [
                  Object {
                    "dependencies": Array [
                      "trendy",
                    ],
                    "if": "trendy",
                  },
                ],
                "contents": Array [
                  Object {
                    "tag": "String",
                    "value": "V.O.R.T.E.X.",
                  },
                ],
                "tag": "Condition",
              },
            ],
            "tag": "Condition",
          },
        ],
      },
    ],
    "global": false,
    "key": "a123",
    "tag": "Room",
  },
  "strong": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "strong",
    "tag": "Variable",
  },
  "trendy": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "trendy",
    "tag": "Variable",
  },
}
`;

exports[`WML normalize should correctly handle multiple and nested conditionals 1`] = `
Object {
  "If-1": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 1,
            "key": "a123",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "conditions": Array [
      Object {
        "dependencies": Array [
          "strong",
        ],
        "if": "strong",
      },
    ],
    "key": "If-1",
    "tag": "If",
  },
  "If-2": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "If-3",
            "tag": "If",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "conditions": Array [
      Object {
        "dependencies": Array [
          "strong",
        ],
        "if": "!strong",
      },
    ],
    "key": "If-2",
    "tag": "If",
  },
  "If-3": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 2,
            "key": "a123",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "If-2",
            "tag": "If",
          },
        ],
      },
    ],
    "conditions": Array [
      Object {
        "dependencies": Array [
          "trendy",
        ],
        "if": "trendy",
      },
    ],
    "key": "If-3",
    "tag": "If",
  },
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "a123",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "If-1",
            "tag": "If",
          },
          Object {
            "index": 0,
            "key": "If-2",
            "tag": "If",
          },
          Object {
            "index": 0,
            "key": "strong",
            "tag": "Variable",
          },
          Object {
            "index": 0,
            "key": "trendy",
            "tag": "Variable",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "a123": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [
          Object {
            "tag": "String",
            "value": "Vortex",
          },
        ],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Hello, world!",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "If-1",
            "tag": "If",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Vortex!",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "If-2",
            "tag": "If",
          },
          Object {
            "index": 0,
            "key": "If-3",
            "tag": "If",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "V.O.R.T.E.X.",
          },
        ],
      },
    ],
    "global": false,
    "key": "a123",
    "tag": "Room",
  },
  "strong": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "strong",
    "tag": "Variable",
  },
  "trendy": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "trendy",
    "tag": "Variable",
  },
}
`;

exports[`WML normalize should correctly serialize multiple unconditioned descriptions 1`] = `
Object {
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "test",
            "tag": "Room",
          },
          Object {
            "index": 1,
            "key": "test",
            "tag": "Room",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "test": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "One",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Two",
          },
        ],
      },
    ],
    "global": false,
    "key": "test",
    "tag": "Room",
  },
}
`;

exports[`WML normalize should denormalize condition dependencies into contextStack 1`] = `
Object {
  "If-1": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 1,
            "key": "a123",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "conditions": Array [
      Object {
        "dependencies": Array [
          "strong",
        ],
        "if": "strong",
      },
    ],
    "key": "If-1",
    "tag": "If",
  },
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "a123",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "If-1",
            "tag": "If",
          },
          Object {
            "index": 0,
            "key": "strong",
            "tag": "Variable",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "a123": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [
          Object {
            "tag": "String",
            "value": "Vortex",
          },
        ],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Hello, world!",
          },
        ],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "If-1",
            "tag": "If",
          },
        ],
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Vortex!",
          },
        ],
      },
    ],
    "global": false,
    "key": "a123",
    "tag": "Room",
  },
  "strong": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "false",
    "key": "strong",
    "tag": "Variable",
  },
}
`;

exports[`WML normalize should normalize a character 1`] = `
Object {
  "Tess": Object {
    "FirstImpression": "Frumpy goth",
    "Name": "Tess",
    "OneCoolThing": "Fuchsia eyes",
    "Outfit": "A battered frock-coat",
    "Pronouns": Object {
      "adjective": "hers",
      "object": "her",
      "possessive": "her",
      "reflexive": "herself",
      "subject": "she",
    },
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [],
      },
    ],
    "fileName": "test",
    "images": Array [],
    "key": "Tess",
    "tag": "Character",
  },
}
`;

exports[`WML normalize should normalize every needed tag 1`] = `
Object {
  "ImageTest": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "TestMap",
            "tag": "Map",
          },
        ],
      },
    ],
    "key": "ImageTest",
    "tag": "Image",
  },
  "Import-0": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "power",
            "tag": "Variable",
          },
          Object {
            "index": 0,
            "key": "overview",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "from": "BASE",
    "key": "Import-0",
    "mapping": Object {
      "overview": Object {
        "key": "overview",
        "type": "Room",
      },
      "power": Object {
        "key": "basePower",
        "type": "Variable",
      },
    },
    "tag": "Import",
  },
  "Test": Object {
    "Story": false,
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "Import-0",
            "tag": "Import",
          },
          Object {
            "index": 0,
            "key": "a123",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "b456",
            "tag": "Room",
          },
          Object {
            "index": 0,
            "key": "TestMap",
            "tag": "Map",
          },
          Object {
            "index": 1,
            "key": "clockTower",
            "tag": "Feature",
          },
          Object {
            "index": 0,
            "key": "active",
            "tag": "Variable",
          },
          Object {
            "index": 0,
            "key": "inactive",
            "tag": "Computed",
          },
          Object {
            "index": 0,
            "key": "toggleActive",
            "tag": "Action",
          },
          Object {
            "index": 0,
            "key": "postFix",
            "tag": "Bookmark",
          },
          Object {
            "index": 0,
            "key": "activateMoment",
            "tag": "Moment",
          },
        ],
        "contextStack": Array [],
      },
    ],
    "fileName": "Test",
    "instance": false,
    "key": "Test",
    "tag": "Asset",
    "zone": undefined,
  },
  "TestMap": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "ImageTest",
            "tag": "Image",
          },
          Object {
            "index": 1,
            "key": "a123",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "images": Array [
          "ImageTest",
        ],
        "rooms": Array [
          Object {
            "conditions": Array [],
            "key": "a123",
            "x": 200,
            "y": 150,
          },
        ],
      },
    ],
    "key": "TestMap",
    "tag": "Map",
  },
  "a123": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "a123#b456",
            "tag": "Exit",
          },
          Object {
            "index": 0,
            "key": "clockTower",
            "tag": "Feature",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "TestMap",
            "tag": "Map",
          },
        ],
        "name": Array [],
        "render": Array [],
        "x": 200,
        "y": 150,
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "activateMoment",
            "tag": "Moment",
          },
          Object {
            "index": 0,
            "key": "activate",
            "tag": "Message",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "a123",
    "tag": "Room",
  },
  "a123#b456": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "a123",
            "tag": "Room",
          },
        ],
      },
    ],
    "from": "a123",
    "key": "a123#b456",
    "name": "",
    "tag": "Exit",
    "to": "b456",
  },
  "activate": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 2,
            "key": "a123",
            "tag": "Room",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "activateMoment",
            "tag": "Moment",
          },
        ],
        "render": Array [
          Object {
            "tag": "String",
            "value": "It activates!",
          },
        ],
        "rooms": Array [
          Object {
            "key": "a123",
          },
        ],
      },
    ],
    "key": "activate",
    "tag": "Message",
  },
  "activateMoment": Object {
    "appearances": Array [
      Object {
        "contents": Array [
          Object {
            "index": 0,
            "key": "activate",
            "tag": "Message",
          },
        ],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "messages": Array [
          "activate",
        ],
      },
    ],
    "key": "activateMoment",
    "tag": "Moment",
  },
  "active": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "default": "true",
    "key": "active",
    "tag": "Variable",
  },
  "b456": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "b456",
    "tag": "Room",
  },
  "clockTower": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "a123",
            "tag": "Room",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "name": Array [
          Object {
            "tag": "String",
            "value": "Clock Tower",
          },
        ],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "clockTower",
    "tag": "Feature",
  },
  "inactive": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "dependencies": Array [
      "active",
    ],
    "key": "inactive",
    "src": "!active",
    "tag": "Computed",
  },
  "overview": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "Import-0",
            "tag": "Import",
          },
        ],
        "name": Array [],
        "render": Array [],
      },
    ],
    "global": false,
    "key": "overview",
    "tag": "Room",
  },
  "postFix": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
        "render": Array [
          Object {
            "tag": "Space",
          },
          Object {
            "tag": "String",
            "value": "Inactive",
          },
        ],
      },
    ],
    "key": "postFix",
    "tag": "Bookmark",
  },
  "power": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
          Object {
            "index": 0,
            "key": "Import-0",
            "tag": "Import",
          },
        ],
      },
    ],
    "default": undefined,
    "key": "power",
    "tag": "Variable",
  },
  "toggleActive": Object {
    "appearances": Array [
      Object {
        "contents": Array [],
        "contextStack": Array [
          Object {
            "index": 0,
            "key": "Test",
            "tag": "Asset",
          },
        ],
      },
    ],
    "key": "toggleActive",
    "src": "active = !active",
    "tag": "Action",
  },
}
`;
