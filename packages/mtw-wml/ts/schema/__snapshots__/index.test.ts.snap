// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`schemaFromParse should combine conditional elements at every level 1`] = `
Array [
  Object {
    "Story": undefined,
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "tag": "String",
                "value": "Test One ",
              },
              Object {
                "conditions": Array [
                  Object {
                    "dependencies": Array [
                      "open",
                    ],
                    "if": "open",
                  },
                ],
                "contents": Array [
                  Object {
                    "tag": "String",
                    "value": "Test Two",
                  },
                ],
                "contextTag": "Description",
                "tag": "If",
              },
            ],
            "tag": "Description",
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [
                  "open",
                ],
                "if": "open",
              },
            ],
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "tag": "String",
                    "value": "Test Three",
                  },
                ],
                "tag": "Description",
              },
            ],
            "contextTag": "Room",
            "tag": "If",
          },
        ],
        "display": undefined,
        "key": "ABC",
        "name": Array [],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Test One ",
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [
                  "open",
                ],
                "if": "open",
              },
            ],
            "contents": Array [
              Object {
                "tag": "String",
                "value": "Test Two",
              },
            ],
            "contextTag": "Description",
            "tag": "If",
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [
                  "open",
                ],
                "if": "open",
              },
            ],
            "contents": Array [
              Object {
                "tag": "String",
                "value": "Test Three",
              },
            ],
            "contextTag": "Description",
            "tag": "If",
          },
        ],
        "tag": "Room",
        "x": undefined,
        "y": undefined,
      },
      Object {
        "conditions": Array [
          Object {
            "dependencies": Array [
              "open",
            ],
            "if": "open",
          },
        ],
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "tag": "String",
                    "value": "Test Four",
                  },
                ],
                "tag": "Description",
              },
            ],
            "display": undefined,
            "key": "ABC",
            "name": Array [],
            "render": Array [
              Object {
                "tag": "String",
                "value": "Test Four",
              },
            ],
            "tag": "Room",
            "x": undefined,
            "y": undefined,
          },
        ],
        "contextTag": "Asset",
        "tag": "If",
      },
      Object {
        "default": "false",
        "key": "open",
        "tag": "Variable",
      },
    ],
    "fileName": "test",
    "key": "Test",
    "player": undefined,
    "subFolder": undefined,
    "tag": "Asset",
    "zone": undefined,
  },
]
`;

exports[`schemaFromParse should correctly extract map rooms 1`] = `
Array [
  Object {
    "Story": undefined,
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "contents": Array [],
            "display": undefined,
            "key": "ABC",
            "name": Array [],
            "render": Array [],
            "tag": "Room",
            "x": 100,
            "y": 0,
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [
                  "open",
                ],
                "if": "open",
              },
            ],
            "contents": Array [
              Object {
                "contents": Array [],
                "display": undefined,
                "key": "DEF",
                "name": Array [],
                "render": Array [],
                "tag": "Room",
                "x": -100,
                "y": 0,
              },
            ],
            "contextTag": "Map",
            "tag": "If",
          },
        ],
        "images": Array [],
        "key": "testMap",
        "name": Array [
          Object {
            "tag": "String",
            "value": "Test Map",
          },
        ],
        "rooms": Array [
          Object {
            "conditions": Array [],
            "key": "ABC",
            "x": 100,
            "y": 0,
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [
                  "open",
                ],
                "if": "open",
              },
            ],
            "key": "DEF",
            "x": -100,
            "y": 0,
          },
        ],
        "tag": "Map",
      },
      Object {
        "default": "false",
        "key": "open",
        "tag": "Variable",
      },
    ],
    "fileName": "test",
    "key": "Test",
    "player": undefined,
    "subFolder": undefined,
    "tag": "Asset",
    "zone": undefined,
  },
]
`;

exports[`schemaFromParse should correctly schematize bookmarks 1`] = `
Array [
  Object {
    "Story": true,
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "tag": "Space",
          },
          Object {
            "tag": "String",
            "value": "(awesome!)",
          },
        ],
        "key": "postFix",
        "tag": "Bookmark",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "tag": "String",
                "value": "Vortex",
              },
              Object {
                "contents": Array [],
                "key": "postFix",
                "tag": "Bookmark",
              },
            ],
            "tag": "Description",
          },
        ],
        "display": undefined,
        "key": "ABC",
        "name": Array [
          Object {
            "tag": "String",
            "value": "Vortex",
          },
        ],
        "render": Array [
          Object {
            "tag": "String",
            "value": "Vortex",
          },
          Object {
            "contents": Array [],
            "key": "postFix",
            "tag": "Bookmark",
          },
        ],
        "tag": "Room",
        "x": undefined,
        "y": undefined,
      },
    ],
    "fileName": "test",
    "instance": true,
    "key": "Test",
    "player": undefined,
    "subFolder": undefined,
    "tag": "Story",
    "zone": undefined,
  },
]
`;

exports[`schemaFromParse should make a schema for a character correctly 1`] = `
Array [
  Object {
    "FirstImpression": "Frumpy Goth",
    "Name": "Tess",
    "OneCoolThing": "Fuchsia eyes",
    "Outfit": "A bulky frock-coat lovingly kit-bashed from a black hoodie and patchily dyed lace.",
    "Pronouns": Object {
      "adjective": "hers",
      "object": "her",
      "possessive": "her",
      "reflexive": "herself",
      "subject": "she",
    },
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "tag": "String",
            "value": "Tess",
          },
        ],
        "tag": "Name",
      },
      Object {
        "contents": Array [
          Object {
            "tag": "String",
            "value": "Frumpy Goth",
          },
        ],
        "tag": "FirstImpression",
        "value": "Frumpy Goth",
      },
      Object {
        "contents": Array [
          Object {
            "tag": "String",
            "value": "Fuchsia eyes",
          },
        ],
        "tag": "OneCoolThing",
        "value": "Fuchsia eyes",
      },
      Object {
        "adjective": "hers",
        "object": "her",
        "possessive": "her",
        "reflexive": "herself",
        "subject": "she",
        "tag": "Pronouns",
      },
      Object {
        "contents": Array [
          Object {
            "tag": "String",
            "value": "A bulky frock-coat lovingly kit-bashed from a black hoodie and patchily dyed lace.",
          },
        ],
        "tag": "Outfit",
        "value": "A bulky frock-coat lovingly kit-bashed from a black hoodie and patchily dyed lace.",
      },
      Object {
        "key": "testIcon",
        "tag": "Image",
      },
    ],
    "fileName": "Tess",
    "key": "TESS",
    "player": "TonyLB",
    "subFolder": undefined,
    "tag": "Character",
    "zone": undefined,
  },
]
`;

exports[`schemaFromParse should make a schema from parse elements correctly 1`] = `
Array [
  Object {
    "Story": undefined,
    "contents": Array [
      Object {
        "from": "BASE",
        "mapping": Object {
          "overview": Object {
            "key": "overview",
            "type": "Room",
          },
          "power": Object {
            "key": "basePower",
            "type": "Variable",
          },
        },
        "tag": "Import",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "tag": "Space",
              },
              Object {
                "tag": "String",
                "value": "Vortex",
              },
              Object {
                "conditions": Array [
                  Object {
                    "dependencies": Array [
                      "open",
                    ],
                    "if": "open",
                  },
                ],
                "contents": Array [
                  Object {
                    "tag": "String",
                    "value": ": Open",
                  },
                ],
                "contextTag": "Description",
                "tag": "If",
              },
              Object {
                "conditions": Array [
                  Object {
                    "dependencies": Array [
                      "open",
                    ],
                    "if": "open",
                    "not": true,
                  },
                  Object {
                    "dependencies": Array [
                      "closed",
                    ],
                    "if": "!closed",
                  },
                ],
                "contents": Array [
                  Object {
                    "tag": "String",
                    "value": ": Indeterminate",
                  },
                ],
                "contextTag": "Description",
                "tag": "If",
              },
              Object {
                "conditions": Array [
                  Object {
                    "dependencies": Array [
                      "open",
                    ],
                    "if": "open",
                    "not": true,
                  },
                  Object {
                    "dependencies": Array [
                      "closed",
                    ],
                    "if": "!closed",
                    "not": true,
                  },
                ],
                "contents": Array [
                  Object {
                    "tag": "String",
                    "value": ": Closed",
                  },
                ],
                "contextTag": "Description",
                "tag": "If",
              },
              Object {
                "tag": "String",
                "value": " ",
              },
              Object {
                "tag": "Link",
                "text": "(toggle)",
                "to": "toggleOpen",
              },
            ],
            "tag": "Description",
          },
        ],
        "display": undefined,
        "key": "ABC",
        "name": Array [
          Object {
            "tag": "String",
            "value": "Vortex",
          },
        ],
        "render": Array [
          Object {
            "tag": "Space",
          },
          Object {
            "tag": "String",
            "value": "Vortex",
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [
                  "open",
                ],
                "if": "open",
              },
            ],
            "contents": Array [
              Object {
                "tag": "String",
                "value": ": Open",
              },
            ],
            "contextTag": "Description",
            "tag": "If",
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [
                  "open",
                ],
                "if": "open",
                "not": true,
              },
              Object {
                "dependencies": Array [
                  "closed",
                ],
                "if": "!closed",
              },
            ],
            "contents": Array [
              Object {
                "tag": "String",
                "value": ": Indeterminate",
              },
            ],
            "contextTag": "Description",
            "tag": "If",
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [
                  "open",
                ],
                "if": "open",
                "not": true,
              },
              Object {
                "dependencies": Array [
                  "closed",
                ],
                "if": "!closed",
                "not": true,
              },
            ],
            "contents": Array [
              Object {
                "tag": "String",
                "value": ": Closed",
              },
            ],
            "contextTag": "Description",
            "tag": "If",
          },
          Object {
            "tag": "String",
            "value": " ",
          },
          Object {
            "tag": "Link",
            "text": "(toggle)",
            "to": "toggleOpen",
          },
        ],
        "tag": "Room",
        "x": undefined,
        "y": undefined,
      },
      Object {
        "conditions": Array [
          Object {
            "dependencies": Array [
              "open",
            ],
            "if": "open",
          },
        ],
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "contents": Array [
                  Object {
                    "tag": "String",
                    "value": "welcome",
                  },
                ],
                "from": "ABC",
                "key": "ABC#DEF",
                "name": "welcome",
                "tag": "Exit",
                "to": "DEF",
              },
            ],
            "display": undefined,
            "key": "ABC",
            "name": Array [],
            "render": Array [],
            "tag": "Room",
            "x": undefined,
            "y": undefined,
          },
        ],
        "contextTag": "Asset",
        "tag": "If",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "tag": "String",
                "value": "vortex",
              },
            ],
            "from": "DEF",
            "key": "DEF#DEF",
            "name": "vortex",
            "tag": "Exit",
            "to": "DEF",
          },
        ],
        "display": undefined,
        "key": "DEF",
        "name": Array [
          Object {
            "tag": "String",
            "value": "Welcome",
          },
        ],
        "render": Array [],
        "tag": "Room",
        "x": undefined,
        "y": undefined,
      },
      Object {
        "default": "false",
        "key": "open",
        "tag": "Variable",
      },
      Object {
        "key": "toggleOpen",
        "src": "open = !open",
        "tag": "Action",
      },
      Object {
        "dependencies": Array [
          "open",
        ],
        "key": "closed",
        "src": "!open",
        "tag": "Computed",
      },
      Object {
        "contents": Array [
          Object {
            "contents": Array [
              Object {
                "contents": Array [],
                "display": undefined,
                "key": "ABC",
                "name": Array [],
                "render": Array [],
                "tag": "Room",
                "x": undefined,
                "y": undefined,
              },
            ],
            "key": "openDoor",
            "render": Array [
              Object {
                "tag": "String",
                "value": "The door opens!",
              },
            ],
            "rooms": Array [
              Object {
                "key": "ABC",
              },
            ],
            "tag": "Message",
          },
        ],
        "key": "openDoorMoment",
        "tag": "Moment",
      },
    ],
    "fileName": "test",
    "key": "Test",
    "player": undefined,
    "subFolder": undefined,
    "tag": "Asset",
    "zone": undefined,
  },
]
`;

exports[`schemaToWML should correctly escape special characters 1`] = `
"<Asset key=(Test)>
    <Room key=(test)><Description>Test \\\\\\\\ \\\\< \\\\></Description></Room>
</Asset>"
`;
