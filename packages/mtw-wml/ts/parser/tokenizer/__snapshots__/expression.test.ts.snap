// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`expressionTokenizer should properly nest expressions 1`] = `
Object {
  "endIdx": 62,
  "startIdx": 0,
  "type": "ExpressionValue",
  "value": "{ if (value === 'A') { return 'Test' } else { return 'Fail' } ",
}
`;

exports[`expressionTokenizer should properly nest string literals 1`] = `
Object {
  "endIdx": 28,
  "startIdx": 0,
  "type": "ExpressionValue",
  "value": "{ return 'Test' + \\" value}\\" ",
}
`;

exports[`expressionTokenizer should properly nest template literals 1`] = `
Object {
  "endIdx": 26,
  "startIdx": 0,
  "type": "ExpressionValue",
  "value": "{ return \`Test: \${value}\` ",
}
`;

exports[`expressionTokenizer templateStringSubTokenizer should not break on escaped quotes 1`] = `
Object {
  "endIdx": 9,
  "startIdx": 0,
  "type": "TemplateString",
}
`;

exports[`expressionTokenizer templateStringSubTokenizer should return error on unbounded string literal 1`] = `
Object {
  "endIdx": 8,
  "message": "Unbounded template string",
  "startIdx": 0,
  "type": "Error",
}
`;

exports[`expressionTokenizer templateStringSubTokenizer should tokenize nested template strings 1`] = `
Object {
  "endIdx": 19,
  "startIdx": 0,
  "type": "TemplateString",
}
`;
