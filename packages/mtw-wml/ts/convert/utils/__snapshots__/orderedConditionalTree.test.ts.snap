// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`orderedConditionalTree flattenOrderedConditionalTree should flatten a nested tree 1`] = `
Array [
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test",
        ],
        "if": "test",
      },
      Object {
        "dependencies": Array [
          "test3",
        ],
        "if": "test3",
        "not": true,
      },
      Object {
        "dependencies": Array [
          "test2",
        ],
        "if": "test2",
      },
    ],
    "contents": Array [
      Object {
        "key": "NestedWithThreeConditions",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test",
        ],
        "if": "test",
      },
    ],
    "contents": Array [
      Object {
        "key": "NestedWithOneCondition",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
  Object {
    "conditions": Array [],
    "contents": Array [
      Object {
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
        "value": "NotNested",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test4",
        ],
        "if": "test4",
      },
    ],
    "contents": Array [
      Object {
        "key": "SecondNestedWithOneCondition",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
]
`;

exports[`orderedConditionalTree flattenOrderedConditionalTree should merge adjacent items with similar conditions 1`] = `
Array [
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test",
        ],
        "if": "test",
      },
      Object {
        "dependencies": Array [
          "test2",
        ],
        "if": "test2",
      },
    ],
    "contents": Array [
      Object {
        "key": "TestOne",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
      },
      Object {
        "key": "TestTwo",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
      },
      Object {
        "key": "TestThree",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
]
`;

exports[`orderedConditionalTree mergeOrderedConditionalTrees should merge differently ordered trees 1`] = `
Array [
  Object {
    "key": "TestZero",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "String",
  },
  Object {
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "String",
    "value": "TestFour",
  },
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test",
        ],
        "if": "test",
      },
    ],
    "contents": Array [
      Object {
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
        "value": "TestOne",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test2",
        ],
        "if": "test2",
      },
    ],
    "contents": Array [
      Object {
        "conditions": Array [
          Object {
            "dependencies": Array [
              "test3",
            ],
            "if": "test3",
          },
        ],
        "contents": Array [
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestFive",
          },
        ],
        "contextTag": "Description",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "If",
      },
      Object {
        "conditions": Array [
          Object {
            "dependencies": Array [
              "test",
            ],
            "if": "test",
          },
        ],
        "contents": Array [
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestTwo",
          },
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestThree",
          },
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestSix",
          },
        ],
        "contextTag": "Description",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "If",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test",
        ],
        "if": "test",
      },
    ],
    "contents": Array [
      Object {
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
        "value": "TestSeven",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
]
`;

exports[`orderedConditionalTree mergeOrderedConditionalTrees should merge differently ordered trees 2`] = `
Array [
  Object {
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "String",
    "value": "TestFour",
  },
  Object {
    "key": "TestZero",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "String",
  },
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test",
        ],
        "if": "test",
      },
    ],
    "contents": Array [
      Object {
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
        "value": "TestOne",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test2",
        ],
        "if": "test2",
      },
    ],
    "contents": Array [
      Object {
        "conditions": Array [
          Object {
            "dependencies": Array [
              "test3",
            ],
            "if": "test3",
          },
        ],
        "contents": Array [
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestFive",
          },
        ],
        "contextTag": "Description",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "If",
      },
      Object {
        "conditions": Array [
          Object {
            "dependencies": Array [
              "test",
            ],
            "if": "test",
          },
        ],
        "contents": Array [
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestSix",
          },
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestTwo",
          },
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestThree",
          },
        ],
        "contextTag": "Description",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "If",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test",
        ],
        "if": "test",
      },
    ],
    "contents": Array [
      Object {
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
        "value": "TestSeven",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
]
`;

exports[`orderedConditionalTree unflattenOrderedConditionalTree should collapse deep and unbranching conditional paths 1`] = `
Array [
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test",
        ],
        "if": "test",
      },
      Object {
        "dependencies": Array [
          "test2",
        ],
        "if": "test2",
      },
    ],
    "contents": Array [
      Object {
        "conditions": Array [
          Object {
            "dependencies": Array [
              "test3",
            ],
            "if": "test3",
          },
        ],
        "contents": Array [
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestA",
          },
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestB",
          },
        ],
        "contextTag": "Description",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "If",
      },
      Object {
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "String",
        "value": "TestC",
      },
      Object {
        "conditions": Array [
          Object {
            "dependencies": Array [
              "test3",
            ],
            "if": "test3",
          },
        ],
        "contents": Array [
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestD",
          },
        ],
        "contextTag": "Description",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "If",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
  Object {
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "String",
    "value": "TestE",
  },
]
`;

exports[`orderedConditionalTree unflattenOrderedConditionalTree should unflatten a list 1`] = `
Array [
  Object {
    "conditions": Array [
      Object {
        "dependencies": Array [
          "test",
        ],
        "if": "test",
      },
    ],
    "contents": Array [
      Object {
        "conditions": Array [
          Object {
            "dependencies": Array [
              "test2",
            ],
            "if": "test2",
          },
        ],
        "contents": Array [
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestA",
          },
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestB",
          },
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestC",
          },
          Object {
            "conditions": Array [
              Object {
                "dependencies": Array [
                  "test3",
                ],
                "if": "test3",
              },
            ],
            "contents": Array [
              Object {
                "parse": Object {
                  "endTagToken": 0,
                  "startTagToken": 0,
                  "tag": "Space",
                },
                "tag": "String",
                "value": "TestD",
              },
            ],
            "contextTag": "Description",
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "If",
          },
        ],
        "contextTag": "Description",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "If",
      },
      Object {
        "conditions": Array [
          Object {
            "dependencies": Array [
              "test3",
            ],
            "if": "test3",
          },
        ],
        "contents": Array [
          Object {
            "parse": Object {
              "endTagToken": 0,
              "startTagToken": 0,
              "tag": "Space",
            },
            "tag": "String",
            "value": "TestE",
          },
        ],
        "contextTag": "Description",
        "parse": Object {
          "endTagToken": 0,
          "startTagToken": 0,
          "tag": "Space",
        },
        "tag": "If",
      },
    ],
    "contextTag": "Description",
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "If",
  },
  Object {
    "parse": Object {
      "endTagToken": 0,
      "startTagToken": 0,
      "tag": "Space",
    },
    "tag": "String",
    "value": "TestF",
  },
]
`;
