// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`wmlQuery addElement method should correctly add node 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                <Description>
                    Test Render:
                    <Link to=(clockTower)>Clock Tower</Link>
                </Description>
                <Exit to=(Test)>test</Exit><Name>Vortex</Name>
            </Room>
            <Room key=(Test) />
            <Room key=(otherTest)>
                <Description>
                    Render One
                </Description>
            </Room>
            <Room key=(emptyTest)></Room>
        </Asset>
    "
`;

exports[`wmlQuery addElement method should correctly add node before contents 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                <Name>Vortex</Name><Description>
                    Test Render:
                    <Link to=(clockTower)>Clock Tower</Link>
                </Description>
                <Exit to=(Test)>test</Exit>
            </Room>
            <Room key=(Test) />
            <Room key=(otherTest)>
                <Description>
                    Render One
                </Description>
            </Room>
            <Room key=(emptyTest)></Room>
        </Asset>
    "
`;

exports[`wmlQuery addElement method should correctly add node to empty tag 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                <Description>
                    Test Render:
                    <Link to=(clockTower)>Clock Tower</Link>
                </Description>
                <Exit to=(Test)>test</Exit>
            </Room>
            <Room key=(Test) />
            <Room key=(otherTest)>
                <Description>
                    Render One
                </Description>
            </Room>
            <Room key=(emptyTest)><Name>Test</Name></Room>
        </Asset>
    "
`;

exports[`wmlQuery addElement method should correctly add node to self-closing tag 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                <Description>
                    Test Render:
                    <Link to=(clockTower)>Clock Tower</Link>
                </Description>
                <Exit to=(Test)>test</Exit>
            </Room>
            <Room key=(Test) ><Name>Test</Name></Room>
            <Room key=(otherTest)>
                <Description>
                    Render One
                </Description>
            </Room>
            <Room key=(emptyTest)></Room>
        </Asset>
    "
`;

exports[`wmlQuery children method should correctly aggregate child nodes 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "parse": Object {
          "endTagToken": 15,
          "startTagToken": 15,
          "tag": "String",
          "value": "Test Render:",
        },
        "tag": "String",
        "value": "Test Render: ",
      },
      Object {
        "parse": Object {
          "contents": Array [
            Object {
              "endTagToken": 22,
              "startTagToken": 22,
              "tag": "String",
              "value": "Clock Tower",
            },
          ],
          "endTagToken": 23,
          "startTagToken": 17,
          "tag": "Link",
          "to": "clockTower",
        },
        "tag": "Link",
        "text": "Clock Tower",
        "to": "clockTower",
      },
    ],
    "display": undefined,
    "parse": Object {
      "contents": Array [
        Object {
          "endTagToken": 14,
          "startTagToken": 14,
          "tag": "Whitespace",
        },
        Object {
          "endTagToken": 15,
          "startTagToken": 15,
          "tag": "String",
          "value": "Test Render:",
        },
        Object {
          "endTagToken": 16,
          "startTagToken": 16,
          "tag": "Whitespace",
        },
        Object {
          "contents": Array [
            Object {
              "endTagToken": 22,
              "startTagToken": 22,
              "tag": "String",
              "value": "Clock Tower",
            },
          ],
          "endTagToken": 23,
          "startTagToken": 17,
          "tag": "Link",
          "to": "clockTower",
        },
        Object {
          "endTagToken": 24,
          "startTagToken": 24,
          "tag": "Whitespace",
        },
      ],
      "endTagToken": 25,
      "startTagToken": 12,
      "tag": "Description",
    },
    "tag": "Description",
  },
  Object {
    "contents": Array [
      Object {
        "parse": Object {
          "endTagToken": 31,
          "startTagToken": 31,
          "tag": "String",
          "value": "test",
        },
        "tag": "String",
        "value": "test",
      },
    ],
    "from": "VORTEX",
    "key": "VORTEX#Test",
    "name": "test",
    "parse": Object {
      "contents": Array [
        Object {
          "endTagToken": 31,
          "startTagToken": 31,
          "tag": "String",
          "value": "test",
        },
      ],
      "endTagToken": 32,
      "from": "VORTEX",
      "key": "VORTEX#Test",
      "startTagToken": 26,
      "tag": "Exit",
      "to": "Test",
    },
    "tag": "Exit",
    "to": "Test",
  },
  Object {
    "contents": Array [
      Object {
        "parse": Object {
          "endTagToken": 48,
          "startTagToken": 48,
          "tag": "String",
          "value": "Conditional Render",
        },
        "tag": "String",
        "value": "Conditional Render",
      },
    ],
    "display": undefined,
    "parse": Object {
      "contents": Array [
        Object {
          "endTagToken": 47,
          "startTagToken": 47,
          "tag": "Whitespace",
        },
        Object {
          "endTagToken": 48,
          "startTagToken": 48,
          "tag": "String",
          "value": "Conditional Render",
        },
        Object {
          "endTagToken": 49,
          "startTagToken": 49,
          "tag": "Whitespace",
        },
      ],
      "endTagToken": 50,
      "startTagToken": 45,
      "tag": "Description",
    },
    "tag": "Description",
  },
]
`;

exports[`wmlQuery extend method should correctly update base query from filter extension 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                <Description>
                    First Room
                </Description>
                
            </Room>
            <Room key=(Test) />
            <Room key=(nested) />
            <Room key=(nested)><Name>Nested</Name></Room>
            <If {true}>
                <Room key=(VORTEX) global>
                    <Description>
                        Conditional Render
                    </Description>
                </Room>
                <Room key=(Test)>
                    <Exit to=(Test)>vortex</Exit>
                </Room>
            </If>
        </Asset>
    "
`;

exports[`wmlQuery extend method should not impact base search on extension 1`] = `
"
        <Asset key=(BASE)>
            
            <Room key=(Test) />
            <Room key=(nested) />
            <Room key=(nested)><Name>Nested</Name></Room>
            <If {true}>
                
                <Room key=(Test)>
                    <Exit to=(Test)>vortex</Exit>
                </Room>
            </If>
        </Asset>
    "
`;

exports[`wmlQuery not method should correctly chain multiple not operations 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                <Description>
                    Test Render:
                    <Link to=(clockTower)>Clock Tower</Link>
                </Description>
                <Exit to=(Test)>test</Exit>
            </Room>
            <If {true}>
                <Room key=(VORTEX) global>
                    <Description>
                        Conditional Render
                    </Description>
                </Room>
                <Room key=(Test)>
                    <Name>Test</Name>
                </Room>
            </If>
            <Map key=(QRS)>
                <Room key=(Test) x=\\"100\\" y=\\"100\\" />
            </Map>
            
            <Room key=(multipleTest)>
                <Description>
                    Render One
                </Description>
            </Room>
            <Room key=(multipleTest)>
                <Description>
                    Render Two
                </Description>
            </Room>
            <Feature key=(clockTower)>
                <Description>
                    Clocktower
                    test
                    on multiple lines
                </Description>
            </Feature>
        </Asset>
    "
`;

exports[`wmlQuery not method should correctly remove nodes from result-set 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "contents": Array [
          Object {
            "parse": Object {
              "endTagToken": 15,
              "startTagToken": 15,
              "tag": "String",
              "value": "Test Render:",
            },
            "tag": "String",
            "value": "Test Render: ",
          },
          Object {
            "parse": Object {
              "contents": Array [
                Object {
                  "endTagToken": 22,
                  "startTagToken": 22,
                  "tag": "String",
                  "value": "Clock Tower",
                },
              ],
              "endTagToken": 23,
              "startTagToken": 17,
              "tag": "Link",
              "to": "clockTower",
            },
            "tag": "Link",
            "text": "Clock Tower",
            "to": "clockTower",
          },
        ],
        "display": undefined,
        "parse": Object {
          "contents": Array [
            Object {
              "endTagToken": 14,
              "startTagToken": 14,
              "tag": "Whitespace",
            },
            Object {
              "endTagToken": 15,
              "startTagToken": 15,
              "tag": "String",
              "value": "Test Render:",
            },
            Object {
              "endTagToken": 16,
              "startTagToken": 16,
              "tag": "Whitespace",
            },
            Object {
              "contents": Array [
                Object {
                  "endTagToken": 22,
                  "startTagToken": 22,
                  "tag": "String",
                  "value": "Clock Tower",
                },
              ],
              "endTagToken": 23,
              "startTagToken": 17,
              "tag": "Link",
              "to": "clockTower",
            },
            Object {
              "endTagToken": 24,
              "startTagToken": 24,
              "tag": "Whitespace",
            },
          ],
          "endTagToken": 25,
          "startTagToken": 12,
          "tag": "Description",
        },
        "tag": "Description",
      },
      Object {
        "contents": Array [
          Object {
            "parse": Object {
              "endTagToken": 31,
              "startTagToken": 31,
              "tag": "String",
              "value": "test",
            },
            "tag": "String",
            "value": "test",
          },
        ],
        "from": "VORTEX",
        "key": "VORTEX#Test",
        "name": "test",
        "parse": Object {
          "contents": Array [
            Object {
              "endTagToken": 31,
              "startTagToken": 31,
              "tag": "String",
              "value": "test",
            },
          ],
          "endTagToken": 32,
          "from": "VORTEX",
          "key": "VORTEX#Test",
          "startTagToken": 26,
          "tag": "Exit",
          "to": "Test",
        },
        "tag": "Exit",
        "to": "Test",
      },
    ],
    "display": undefined,
    "global": true,
    "key": "VORTEX",
    "name": Array [],
    "parse": Object {
      "contents": Array [
        Object {
          "contents": Array [
            Object {
              "endTagToken": 14,
              "startTagToken": 14,
              "tag": "Whitespace",
            },
            Object {
              "endTagToken": 15,
              "startTagToken": 15,
              "tag": "String",
              "value": "Test Render:",
            },
            Object {
              "endTagToken": 16,
              "startTagToken": 16,
              "tag": "Whitespace",
            },
            Object {
              "contents": Array [
                Object {
                  "endTagToken": 22,
                  "startTagToken": 22,
                  "tag": "String",
                  "value": "Clock Tower",
                },
              ],
              "endTagToken": 23,
              "startTagToken": 17,
              "tag": "Link",
              "to": "clockTower",
            },
            Object {
              "endTagToken": 24,
              "startTagToken": 24,
              "tag": "Whitespace",
            },
          ],
          "endTagToken": 25,
          "startTagToken": 12,
          "tag": "Description",
        },
        Object {
          "contents": Array [
            Object {
              "endTagToken": 31,
              "startTagToken": 31,
              "tag": "String",
              "value": "test",
            },
          ],
          "endTagToken": 32,
          "from": "VORTEX",
          "key": "VORTEX#Test",
          "startTagToken": 26,
          "tag": "Exit",
          "to": "Test",
        },
      ],
      "endTagToken": 33,
      "global": true,
      "key": "VORTEX",
      "startTagToken": 5,
      "tag": "Room",
    },
    "render": Array [
      Object {
        "parse": Object {
          "endTagToken": 15,
          "startTagToken": 15,
          "tag": "String",
          "value": "Test Render:",
        },
        "tag": "String",
        "value": "Test Render: ",
      },
      Object {
        "parse": Object {
          "contents": Array [
            Object {
              "endTagToken": 22,
              "startTagToken": 22,
              "tag": "String",
              "value": "Clock Tower",
            },
          ],
          "endTagToken": 23,
          "startTagToken": 17,
          "tag": "Link",
          "to": "clockTower",
        },
        "tag": "Link",
        "text": "Clock Tower",
        "to": "clockTower",
      },
    ],
    "tag": "Room",
    "x": undefined,
    "y": undefined,
  },
]
`;

exports[`wmlQuery remove method should correctly remove nodes from source 1`] = `
"
        <Asset key=(BASE)>
            
            <If {true}>
                
            </If>
            <Room key=(Test) />
            <Room key=(multipleTest)>
                <Description>
                    Render One
                </Description>
            </Room>
            <Room key=(multipleTest)>
                <Description>
                    Render Two
                </Description>
            </Room>
            <Feature key=(clockTower)>
                <Description>
                    Clocktower
                    test
                    on multiple lines
                </Description>
            </Feature>
        </Asset>
    "
`;

exports[`wmlQuery render method should (temporarily) ignore render updates on self-closed tags 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                <Description>
                    Test Render:
                    <Link to=(clockTower)>Clock Tower</Link>
                </Description>
                <Exit to=(Test)>test</Exit>
            </Room>
            <Room key=(Test) />
            <Room key=(multipleTest)>
                <Description>
                    Render One
                </Description>
            </Room>
            <Room key=(multipleTest)>
                <Description>
                    Render Two
                </Description>
            </Room>
            <Feature key=(clockTower)>
                <Description>
                    Clocktower
                    test
                    on multiple lines
                </Description>
            </Feature>
            <Room key=(emptyTest)>
                <Description></Description>
            </Room>
        </Asset>
    "
`;

exports[`wmlQuery render method should correctly extract renders 1`] = `
Array [
  Object {
    "tag": "String",
    "value": "Test Render: ",
  },
  Object {
    "tag": "Link",
    "targetTag": "Feature",
    "text": "Clock Tower",
    "to": "clockTower",
  },
]
`;

exports[`wmlQuery render method should correctly update an empty description 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                <Description>
                    Test Render:
                    <Link to=(clockTower)>Clock Tower</Link>
                </Description>
                <Exit to=(Test)>test</Exit>
            </Room>
            <Room key=(Test) />
            <Room key=(multipleTest)>
                <Description>
                    Render One
                </Description>
            </Room>
            <Room key=(multipleTest)>
                <Description>
                    Render Two
                </Description>
            </Room>
            <Feature key=(clockTower)>
                <Description>
                    Clocktower
                    test
                    on multiple lines
                </Description>
            </Feature>
            <Room key=(emptyTest)>
                <Description>Test</Description>
            </Room>
        </Asset>
    "
`;

exports[`wmlQuery render method should correctly update multiple renders in a set 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                <Description>
                    Test Render:
                    <Link to=(clockTower)>Clock Tower</Link>
                </Description>
                <Exit to=(Test)>test</Exit>
            </Room>
            <Room key=(Test) />
            <Room key=(multipleTest)>
                <Description>Much, much, longer render
                Like, seriously, it's insane how much longer this render is
            </Description>
            </Room>
            <Room key=(multipleTest)>
                <Description>Much, much, longer render
                Like, seriously, it's insane how much longer this render is
            </Description>
            </Room>
            <Feature key=(clockTower)>
                <Description>
                    Clocktower
                    test
                    on multiple lines
                </Description>
            </Feature>
            <Room key=(emptyTest)>
                <Description></Description>
            </Room>
        </Asset>
    "
`;

exports[`wmlQuery render method should correctly update renders 1`] = `
"
        <Asset key=(BASE)>
            <Room key=(VORTEX) global>
                <Description>Test Render Two: <Link to=(clockTower)>(clock tower)</Link></Description>
                <Exit to=(Test)>test</Exit>
            </Room>
            <Room key=(Test) />
            <Room key=(multipleTest)>
                <Description>
                    Render One
                </Description>
            </Room>
            <Room key=(multipleTest)>
                <Description>
                    Render Two
                </Description>
            </Room>
            <Feature key=(clockTower)>
                <Description>
                    Clocktower
                    test
                    on multiple lines
                </Description>
            </Feature>
            <Room key=(emptyTest)>
                <Description></Description>
            </Room>
        </Asset>
    "
`;

exports[`wmlQuery should correctly query nodes 1`] = `
Array [
  Object {
    "contents": Array [
      Object {
        "parse": Object {
          "endTagToken": 14,
          "startTagToken": 14,
          "tag": "String",
          "value": "Tess",
        },
        "tag": "String",
        "value": "Tess",
      },
    ],
    "parse": Object {
      "contents": Array [
        Object {
          "endTagToken": 14,
          "startTagToken": 14,
          "tag": "String",
          "value": "Tess",
        },
      ],
      "endTagToken": 15,
      "startTagToken": 12,
      "tag": "Name",
    },
    "tag": "Name",
  },
]
`;

exports[`wmlQuery should correctly remove and update boolean prop 1`] = `
"
            <Asset key=(BASE)>
                <Room key=(VORTEX)>
                </Room>
                <Room key=(Test) />
            </Asset>
        "
`;

exports[`wmlQuery should correctly remove and update boolean prop 2`] = `
"
            <Asset key=(BASE)>
                <Room key=(VORTEX)>
                </Room>
                <Room key=(Test) global />
            </Asset>
        "
`;

exports[`wmlQuery should correctly remove and update boolean prop 3`] = `
"
            <Asset key=(BASE)>
                <Room key=(VORTEX)>
                </Room>
                <Room key=(Test)/>
            </Asset>
        "
`;

exports[`wmlQuery should correctly remove and update expression prop 1`] = `
"
            <Asset key=(BASE)>
                <Variable key=(test) default={false} />
            </Asset>
        "
`;
