// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`optimisticUpdate should properly map ExpressionAttributeNames 1`] = `
Object {
  "ConditionExpression": "#name = :Old0 AND #test = :Old1 AND attribute_not_exists(#zone)",
  "ExpressionAttributeNames": Object {
    "#name": "Name",
    "#test": "Test",
    "#zone": "Zone",
  },
  "ExpressionAttributeValues": Object {
    ":New0": Object {
      "S": "Different Test",
    },
    ":New2": Object {
      "S": "New test",
    },
    ":Old0": Object {
      "S": "Testing",
    },
    ":Old1": Object {
      "S": "Also Testing",
    },
  },
  "Key": Object {
    "DataCategory": Object {
      "S": "Meta::Test",
    },
    "EphemeraId": Object {
      "S": "TEST",
    },
  },
  "ReturnValues": undefined,
  "TableName": "ephemeraTest",
  "UpdateExpression": "SET #name = :New0, #zone = :New2 REMOVE #test",
}
`;

exports[`optimisticUpdate should update and remove fields on change 1`] = `
Object {
  "ConditionExpression": "testOne = :Old0 AND testTwo = :Old1 AND attribute_not_exists(testThree)",
  "ExpressionAttributeValues": Object {
    ":New0": Object {
      "S": "Different Test",
    },
    ":New2": Object {
      "S": "New test",
    },
    ":Old0": Object {
      "S": "Testing",
    },
    ":Old1": Object {
      "S": "Also Testing",
    },
  },
  "Key": Object {
    "DataCategory": Object {
      "S": "Meta::Test",
    },
    "EphemeraId": Object {
      "S": "TEST",
    },
  },
  "ReturnValues": undefined,
  "TableName": "ephemeraTest",
  "UpdateExpression": "SET testOne = :New0, testThree = :New2 REMOVE testTwo",
}
`;

exports[`optimisticUpdate should update when field not defined 1`] = `
Object {
  "ConditionExpression": "attribute_not_exists(optionalField)",
  "ExpressionAttributeValues": Object {
    ":New0": Object {
      "S": "Test",
    },
  },
  "Key": Object {
    "DataCategory": Object {
      "S": "Meta::Test",
    },
    "EphemeraId": Object {
      "S": "TEST",
    },
  },
  "ReturnValues": undefined,
  "TableName": "ephemeraTest",
  "UpdateExpression": "SET optionalField = :New0",
}
`;

exports[`optimisticUpdate should update when no item fetched 1`] = `
Object {
  "ConditionExpression": "attribute_not_exists(DataCategory)",
  "ExpressionAttributeValues": Object {
    ":New0": Object {
      "S": "Test",
    },
    ":New1": Object {
      "S": "Another test",
    },
  },
  "Key": Object {
    "DataCategory": Object {
      "S": "Meta::Test",
    },
    "EphemeraId": Object {
      "S": "TEST",
    },
  },
  "ReturnValues": undefined,
  "TableName": "ephemeraTest",
  "UpdateExpression": "SET testOne = :New0, testTwo = :New1",
}
`;
